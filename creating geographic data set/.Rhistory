jobsupplycost <- str_extract_all(remDr$findElement(using = "css", value = "#r2")$getElementText(), "[/$0-9][0-9]+")
#Sys.sleep(5)
equipmentallowance <- str_extract_all(remDr$findElement(using = "css", value = "#r3")$getElementText(), "[/$0-9][0-9]+")
print(zip)
costs[i,]$totalcost_low <- totalcost_low
costs[i,]$totalcost_high <- totalcost_high
costs[i,]$systemcost_low <- systemcost_low
costs[i,]$systemcost_high <- systemcost_high
costs[i,]$laborcost_low <- laborcost[[1]][1]
costs[i,]$laborcost_high <- laborcost[[1]][2]
costs[i,]$jobsupplycost_low <- jobsupplycost[[1]][1]
costs[i,]$jobsupplycost_high <- jobsupplycost[[1]][2]
costs[i,]$equipmentallowance_low <- equipmentallowance[[1]][1]
costs[i,]$equipmentallowance_high <- equipmentallowance[[1]][2]
if(i%%50 == 0) write.csv(costs, "temp.csv", row.names = F)
}
costs
write.csv(costs, "temp.csv", row.names = F)
test <- apply(df,2,as.character)
test <- apply(costs,2,as.character)
View(test)
test <- as.data.frame(apply(costs,2,as.character))
View(test)
write.csv(test, "temp.csv", row.names = F)
rD <- rsDriver(port = 4445L, browser = "chrome")
remDr <- rD$client
remDr$navigate("https://www.homewyse.com")
rD <- rsDriver(port = 4445L, browser = "chrome")
remDr <- rD$client
remDr$navigate("https://www.homewyse.com")
remDr$navigate("https://www.homewyse.com/services/cost_to_install_heat_pump.html")
for(i in 51:length(wisconsin_zip)){
zip <- wisconsin_zip[i]
costs[i,]$zipcode <- zip
remDr$findElement(using = "css", value = '#postcode5')$sendKeysToElement(list("\u0008", "\u0008", "\u0008", "\u0008", "\u0008", as.character(zip), key = "enter"))
Sys.sleep(5)
remDr$findElement(using = "css", value = "#button1")$click()
Sys.sleep(1)
#Sys.sleep(5)
totalcost_low <- remDr$findElement(using = "css", value = "#s1")$getElementText()
#Sys.sleep(5)
totalcost_high <- remDr$findElement(using = "css", value = "#s2")$getElementText()
#Sys.sleep(5)
systemcost_low <- remDr$findElement(using = "css", value = ".low_val")$getElementText()
#Sys.sleep(5)
systemcost_high <- remDr$findElement(using = "css", value = ".hi_val")$getElementText()
#Sys.sleep(5)
laborcost <- str_extract_all(remDr$findElement(using = "css", value = "#r1")$getElementText(), "[$0-9],[0-9]+")
#Sys.sleep(5)
jobsupplycost <- str_extract_all(remDr$findElement(using = "css", value = "#r2")$getElementText(), "[/$0-9][0-9]+")
#Sys.sleep(5)
equipmentallowance <- str_extract_all(remDr$findElement(using = "css", value = "#r3")$getElementText(), "[/$0-9][0-9]+")
print(zip)
costs[i,]$totalcost_low <- totalcost_low
costs[i,]$totalcost_high <- totalcost_high
costs[i,]$systemcost_low <- systemcost_low
costs[i,]$systemcost_high <- systemcost_high
costs[i,]$laborcost_low <- laborcost[[1]][1]
costs[i,]$laborcost_high <- laborcost[[1]][2]
costs[i,]$jobsupplycost_low <- jobsupplycost[[1]][1]
costs[i,]$jobsupplycost_high <- jobsupplycost[[1]][2]
costs[i,]$equipmentallowance_low <- equipmentallowance[[1]][1]
costs[i,]$equipmentallowance_high <- equipmentallowance[[1]][2]
if(i%%50 == 0) {
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
}
}
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
remDr$close()
rD <- rsDriver(port = 4445L, browser = "chrome")
remDr <- rD$client
remDr$navigate("https://www.homewyse.com")
remDr$navigate("https://www.homewyse.com/services/cost_to_install_heat_pump.html")
for(i in 737:length(wisconsin_zip)){
zip <- wisconsin_zip[i]
costs[i,]$zipcode <- zip
remDr$findElement(using = "css", value = '#postcode5')$sendKeysToElement(list("\u0008", "\u0008", "\u0008", "\u0008", "\u0008", as.character(zip), key = "enter"))
Sys.sleep(5)
remDr$findElement(using = "css", value = "#button1")$click()
Sys.sleep(1)
#Sys.sleep(5)
totalcost_low <- remDr$findElement(using = "css", value = "#s1")$getElementText()
#Sys.sleep(5)
totalcost_high <- remDr$findElement(using = "css", value = "#s2")$getElementText()
#Sys.sleep(5)
systemcost_low <- remDr$findElement(using = "css", value = ".low_val")$getElementText()
#Sys.sleep(5)
systemcost_high <- remDr$findElement(using = "css", value = ".hi_val")$getElementText()
#Sys.sleep(5)
laborcost <- str_extract_all(remDr$findElement(using = "css", value = "#r1")$getElementText(), "[$0-9],[0-9]+")
#Sys.sleep(5)
jobsupplycost <- str_extract_all(remDr$findElement(using = "css", value = "#r2")$getElementText(), "[/$0-9][0-9]+")
#Sys.sleep(5)
equipmentallowance <- str_extract_all(remDr$findElement(using = "css", value = "#r3")$getElementText(), "[/$0-9][0-9]+")
print(zip)
costs[i,]$totalcost_low <- totalcost_low
costs[i,]$totalcost_high <- totalcost_high
costs[i,]$systemcost_low <- systemcost_low
costs[i,]$systemcost_high <- systemcost_high
costs[i,]$laborcost_low <- laborcost[[1]][1]
costs[i,]$laborcost_high <- laborcost[[1]][2]
costs[i,]$jobsupplycost_low <- jobsupplycost[[1]][1]
costs[i,]$jobsupplycost_high <- jobsupplycost[[1]][2]
costs[i,]$equipmentallowance_low <- equipmentallowance[[1]][1]
costs[i,]$equipmentallowance_high <- equipmentallowance[[1]][2]
if(i%%50 == 0) {
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
}
}
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
for(i in 888:length(wisconsin_zip)){
zip <- wisconsin_zip[i]
costs[i,]$zipcode <- zip
remDr$findElement(using = "css", value = '#postcode5')$sendKeysToElement(list("\u0008", "\u0008", "\u0008", "\u0008", "\u0008", as.character(zip), key = "enter"))
remDr$findElement(using = "css", value = "#button1")$click()
Sys.sleep(3)
totalcost_low <- remDr$findElement(using = "css", value = "#s1")$getElementText()
totalcost_high <- remDr$findElement(using = "css", value = "#s2")$getElementText()
systemcost_low <- remDr$findElement(using = "css", value = ".low_val")$getElementText()
systemcost_high <- remDr$findElement(using = "css", value = ".hi_val")$getElementText()
laborcost <- str_extract_all(remDr$findElement(using = "css", value = "#r1")$getElementText(), "[$0-9],[0-9]+")
jobsupplycost <- str_extract_all(remDr$findElement(using = "css", value = "#r2")$getElementText(), "[/$0-9][0-9]+")
equipmentallowance <- str_extract_all(remDr$findElement(using = "css", value = "#r3")$getElementText(), "[/$0-9][0-9]+")
print(zip)
costs[i,]$totalcost_low <- totalcost_low
costs[i,]$totalcost_high <- totalcost_high
costs[i,]$systemcost_low <- systemcost_low
costs[i,]$systemcost_high <- systemcost_high
costs[i,]$laborcost_low <- laborcost[[1]][1]
costs[i,]$laborcost_high <- laborcost[[1]][2]
costs[i,]$jobsupplycost_low <- jobsupplycost[[1]][1]
costs[i,]$jobsupplycost_high <- jobsupplycost[[1]][2]
costs[i,]$equipmentallowance_low <- equipmentallowance[[1]][1]
costs[i,]$equipmentallowance_high <- equipmentallowance[[1]][2]
if(i%%50 == 0) {
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
}
}
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
for(i in 906:length(wisconsin_zip)){
zip <- wisconsin_zip[i]
costs[i,]$zipcode <- zip
remDr$findElement(using = "css", value = '#postcode5')$sendKeysToElement(list("\u0008", "\u0008", "\u0008", "\u0008", "\u0008", as.character(zip), key = "enter"))
remDr$findElement(using = "css", value = "#button1")$click()
Sys.sleep(2)
totalcost_low <- remDr$findElement(using = "css", value = "#s1")$getElementText()
totalcost_high <- remDr$findElement(using = "css", value = "#s2")$getElementText()
systemcost_low <- remDr$findElement(using = "css", value = ".low_val")$getElementText()
systemcost_high <- remDr$findElement(using = "css", value = ".hi_val")$getElementText()
laborcost <- str_extract_all(remDr$findElement(using = "css", value = "#r1")$getElementText(), "[$0-9],[0-9]+")
jobsupplycost <- str_extract_all(remDr$findElement(using = "css", value = "#r2")$getElementText(), "[/$0-9][0-9]+")
equipmentallowance <- str_extract_all(remDr$findElement(using = "css", value = "#r3")$getElementText(), "[/$0-9][0-9]+")
costs[i,]$totalcost_low <- totalcost_low
costs[i,]$totalcost_high <- totalcost_high
costs[i,]$systemcost_low <- systemcost_low
costs[i,]$systemcost_high <- systemcost_high
costs[i,]$laborcost_low <- laborcost[[1]][1]
costs[i,]$laborcost_high <- laborcost[[1]][2]
costs[i,]$jobsupplycost_low <- jobsupplycost[[1]][1]
costs[i,]$jobsupplycost_high <- jobsupplycost[[1]][2]
costs[i,]$equipmentallowance_low <- equipmentallowance[[1]][1]
costs[i,]$equipmentallowance_high <- equipmentallowance[[1]][2]
print(zip)
if(i%%50 == 0) {
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
}
}
View(costs)
for(i in 906:length(wisconsin_zip)){
zip <- wisconsin_zip[i]
costs[i,]$zipcode <- zip
remDr$findElement(using = "css", value = '#postcode5')$sendKeysToElement(list("\u0008", "\u0008", "\u0008", "\u0008", "\u0008", as.character(zip), key = "enter"))
remDr$findElement(using = "css", value = "#button1")$click()
Sys.sleep(2)
totalcost_low <- remDr$findElement(using = "css", value = "#s1")$getElementText()
totalcost_high <- remDr$findElement(using = "css", value = "#s2")$getElementText()
systemcost_low <- remDr$findElement(using = "css", value = ".low_val")$getElementText()
systemcost_high <- remDr$findElement(using = "css", value = ".hi_val")$getElementText()
laborcost <- str_extract_all(remDr$findElement(using = "css", value = "#r1")$getElementText(), "[$0-9],[0-9]+")
jobsupplycost <- str_extract_all(remDr$findElement(using = "css", value = "#r2")$getElementText(), "[/$0-9][0-9]+")
equipmentallowance <- str_extract_all(remDr$findElement(using = "css", value = "#r3")$getElementText(), "[/$0-9][0-9]+")
costs[i,]$totalcost_low <- totalcost_low
costs[i,]$totalcost_high <- totalcost_high
costs[i,]$systemcost_low <- systemcost_low
costs[i,]$systemcost_high <- systemcost_high
costs[i,]$laborcost_low <- laborcost[[1]][1]
costs[i,]$laborcost_high <- laborcost[[1]][2]
costs[i,]$jobsupplycost_low <- jobsupplycost[[1]][1]
costs[i,]$jobsupplycost_high <- jobsupplycost[[1]][2]
costs[i,]$equipmentallowance_low <- equipmentallowance[[1]][1]
costs[i,]$equipmentallowance_high <- equipmentallowance[[1]][2]
print(zip)
if(i%%50 == 0) {
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
}
}
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
test
View(test)
for(i in 1230:length(wisconsin_zip)){
zip <- wisconsin_zip[i]
costs[i,]$zipcode <- zip
remDr$findElement(using = "css", value = '#postcode5')$sendKeysToElement(list("\u0008", "\u0008", "\u0008", "\u0008", "\u0008", as.character(zip), key = "enter"))
remDr$findElement(using = "css", value = "#button1")$click()
Sys.sleep(2)
totalcost_low <- remDr$findElement(using = "css", value = "#s1")$getElementText()
totalcost_high <- remDr$findElement(using = "css", value = "#s2")$getElementText()
systemcost_low <- remDr$findElement(using = "css", value = ".low_val")$getElementText()
systemcost_high <- remDr$findElement(using = "css", value = ".hi_val")$getElementText()
laborcost <- str_extract_all(remDr$findElement(using = "css", value = "#r1")$getElementText(), "[$0-9],[0-9]+")
jobsupplycost <- str_extract_all(remDr$findElement(using = "css", value = "#r2")$getElementText(), "[/$0-9][0-9]+")
equipmentallowance <- str_extract_all(remDr$findElement(using = "css", value = "#r3")$getElementText(), "[/$0-9][0-9]+")
costs[i,]$totalcost_low <- totalcost_low
costs[i,]$totalcost_high <- totalcost_high
costs[i,]$systemcost_low <- systemcost_low
costs[i,]$systemcost_high <- systemcost_high
costs[i,]$laborcost_low <- laborcost[[1]][1]
costs[i,]$laborcost_high <- laborcost[[1]][2]
costs[i,]$jobsupplycost_low <- jobsupplycost[[1]][1]
costs[i,]$jobsupplycost_high <- jobsupplycost[[1]][2]
costs[i,]$equipmentallowance_low <- equipmentallowance[[1]][1]
costs[i,]$equipmentallowance_high <- equipmentallowance[[1]][2]
print(zip)
if(i%%50 == 0) {
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
}
}
rD <- rsDriver(port = 4445L, browser = "chrome")
remDr <- rD$client
remDr$navigate("https://www.homewyse.com")
remDr$navigate("https://www.homewyse.com/services/cost_to_install_heat_pump.html")
for(i in 1230:length(wisconsin_zip)){
zip <- wisconsin_zip[i]
costs[i,]$zipcode <- zip
remDr$findElement(using = "css", value = '#postcode5')$sendKeysToElement(list("\u0008", "\u0008", "\u0008", "\u0008", "\u0008", as.character(zip), key = "enter"))
remDr$findElement(using = "css", value = "#button1")$click()
Sys.sleep(2)
totalcost_low <- remDr$findElement(using = "css", value = "#s1")$getElementText()
totalcost_high <- remDr$findElement(using = "css", value = "#s2")$getElementText()
systemcost_low <- remDr$findElement(using = "css", value = ".low_val")$getElementText()
systemcost_high <- remDr$findElement(using = "css", value = ".hi_val")$getElementText()
laborcost <- str_extract_all(remDr$findElement(using = "css", value = "#r1")$getElementText(), "[$0-9],[0-9]+")
jobsupplycost <- str_extract_all(remDr$findElement(using = "css", value = "#r2")$getElementText(), "[/$0-9][0-9]+")
equipmentallowance <- str_extract_all(remDr$findElement(using = "css", value = "#r3")$getElementText(), "[/$0-9][0-9]+")
costs[i,]$totalcost_low <- totalcost_low
costs[i,]$totalcost_high <- totalcost_high
costs[i,]$systemcost_low <- systemcost_low
costs[i,]$systemcost_high <- systemcost_high
costs[i,]$laborcost_low <- laborcost[[1]][1]
costs[i,]$laborcost_high <- laborcost[[1]][2]
costs[i,]$jobsupplycost_low <- jobsupplycost[[1]][1]
costs[i,]$jobsupplycost_high <- jobsupplycost[[1]][2]
costs[i,]$equipmentallowance_low <- equipmentallowance[[1]][1]
costs[i,]$equipmentallowance_high <- equipmentallowance[[1]][2]
print(zip)
if(i%%50 == 0) {
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "temp.csv", row.names = F)
}
}
test <- as.data.frame(apply(costs,2,as.character))
write.csv(test, "cost to install heat pump - default.csv", row.names = F)
remDr$close()
setwd("~/Downloads")
dir()
census_tracts <- read.csv("tracts_trim_0.csv")
zip <- read.csv("final_wi_zip_fips_county.csv")
census_tracts <- read.csv("tracts_trim_0.csv")
census_tracts <- read.csv("tracts_trim_0.csv", skip = 1)
View(census_tracts)
census_tracts <- read.csv("tracts_trim_0.csv")
census_tracts <- read.csv("tracts_trim_0.csv")
View(census_tracts)
tracts <- read.csv("tracts_trim_0.csv")
rm(census_tracts)
library(diplyr)
library(dplyr)
setwd("~/Downloads")
zip <- read.csv("final_wi_zip_fips_county.csv")
tracts <- read.csv("tracts_trim_0.csv")
tracts <- filter(tracts, STATE == WI)
tracts <- filter(tracts, STATE == "WI")
View(zip)
View(tracts)
library(stingr)
library(stringr)
str_extract_all(tracts, "[0-9]{5}")
str_extract(tracts, "[0-9]{5}")
str_extract(tracts$FIPS, "[0-9]{5}")
tracts$county_fips <- str_extract(tracts$FIPS, "[0-9]{5}")
blah <- full_join(tracts, zip, by = county_fips)
blah <- full_join(tracts, zip, by = "county_fips")
tracts$county_fips <- as.integer(str_extract(tracts$FIPS, "[0-9]{5}"))
blah <- full_join(tracts, zip, by = "county_fips")
View(blah)
blah <- left_join(tracts, zip, by = "county_fips")
tracts <- read.csv("tracts_trim_0.csv")
tracts <- filter(tracts, STATE == "WI")
tracts$county_fips <- as.integer(str_extract(tracts$FIPS, "[0-9]{5}"))
rm(blah)
zip <- select(zip, zip, county_fips)
View(zip)
blah <- left_join(tracts, zip, by = "county_fips")
blah$zip_54301 <- F
blah <- mutate(blah, zip_54301 = ifelse(zip < 54301, T, F))
View(blah)
for(i in blah$FIPS){
temp <- filter(blah, FIPS == i)
if(nrow(temp) == sum(temp$zip_54301))print(i)
}
for(i in blah$FIPS){
temp <- filter(blah, FIPS == i)
if(nrow(temp) == sum(temp$zip_54301))print(unique(temp$COUNTY))
}
for(i in unique9blah$FIPS)){
temp <- filter(blah, FIPS == i)
if(nrow(temp) == sum(temp$zip_54301))print(unique(temp$COUNTY))
}
for(i in unique9blah$FIPS)){
temp <- filter(blah, FIPS == i)
if(nrow(temp) == sum(temp$zip_54301))print(unique(temp$COUNTY))
}
for(i in unique(blah$FIPS)){
temp <- filter(blah, FIPS == i)
if(nrow(temp) == sum(temp$zip_54301))print(unique(temp$COUNTY))
}
blah$allT <- F
for(i in unique(blah$FIPS)){
temp <- filter(blah, FIPS == i)
if(nrow(temp) == sum(temp$zip_54301)) {
blah[blah$COUNTY == unique(temp$COUNTY),"allT"] <- T
}
}
blah <- mutate(blah, zip_54301 = ifelse(zip < 54301, T, F))
blah <- mutate(blah, zip_54601 = ifelse(zip < 54601 & zip >= 54301, T, F))
blah <- mutate(blah, zip_54901 = ifelse(zip < 54901 & zip >= 54601, T, F))
blah <- mutate(blah, zip_remaining = ifelse(zip >= 54901, T, F))
blah$allT <- F
blah <- left_join(tracts, zip, by = "county_fips")
blah <- mutate(blah, zip_54301 = ifelse(zip < 54301, T, F))
blah <- mutate(blah, zip_54601 = ifelse(zip < 54601 & zip >= 54301, T, F))
blah <- mutate(blah, zip_54901 = ifelse(zip < 54901 & zip >= 54601, T, F))
blah <- mutate(blah, zip_remaining = ifelse(zip >= 54901, T, F))
blah$allT <- F
blah <- mutate(blah, zip_54301 = ifelse(zip < 54301, T, F))
blah <- left_join(tracts, zip, by = "county_fips")
blah <- mutate(blah, zip_54301 = ifelse(zip < 54301, T, F))
blah <- mutate(blah, zip_54601 = ifelse((zip < 54601 & zip >= 54301) | zip >= 54901, T, F))
blah <- mutate(blah, zip_54901 = ifelse(zip < 54901 & zip >= 54601, T, F))
blah$allT <- F
for(i in unique(blah$FIPS)){
temp <- filter(blah, FIPS == i)
if(nrow(temp) == sum(temp$zip_54301)) {
blah[blah$COUNTY == unique(temp$COUNTY),"allT"] <- T
}
}
for(i in unique(blah$FIPS)){
temp <- filter(blah, FIPS == i)
if(nrow(temp) == sum(temp$zip_54301)) {
blah[blah$COUNTY == unique(temp$COUNTY),"allT"] <- T
} else if(nrow(temp) == sum(temp$zip_54601)) {
blah[blah$COUNTY == unique(temp$COUNTY),"allT"] <- T
} else if(nrow(temp) == sum(temp$zip_54901)) {
blah[blah$COUNTY == unique(temp$COUNTY),"allT"] <- T
}
}
blah2 <- filter(blah, !(allT))
View(blah2)
View(blah2)
blah <- mutate(blah, zip_54301 = ifelse(zip < 54301, T, F))
blah <- mutate(blah, zip_54601 = ifelse((zip < 54601 & zip >= 54301) | zip >= 54901, T, F))
blah <- mutate(blah, zip_54901 = ifelse(zip < 54901 & zip >= 54601, T, F))
final <- NA
i
i <- 55001950100
temp <- filter(blah, FIPS == i)
zip_54301 <- sum(temp$zip_54301)
zip_54601 <- sum(temp$zip_54601)
zip_54901 <- sum(temp$zip_54901)
zip_54301 > zip54601 & zip_54301 > zip54901
zip_54301 > zip_54601 & zip_54301 > zip_54901
if(zip_54301 > zip_54601 & zip_54301 > zip_54901){
temp <- filter(temp, zip_54301)
temp <- temp[1,]
} else if(zip_54601 > zip_54301 & zip_54601 > zip_54901){
temp <- filter(temp, zip_54601)
temp <- temp[1,]
} else {
temp <- filter(temp, zip_54901)
temp <- temp[1,]
}
View(temp)
for(i in unique(blah$FIPS)){
temp <- filter(blah, FIPS == i)
zip_54301 <- sum(temp$zip_54301)
zip_54601 <- sum(temp$zip_54601)
zip_54901 <- sum(temp$zip_54901)
if(zip_54301 > zip_54601 & zip_54301 > zip_54901){
temp <- filter(temp, zip_54301)
temp <- temp[1,]
} else if(zip_54601 > zip_54301 & zip_54601 > zip_54901){
temp <- filter(temp, zip_54601)
temp <- temp[1,]
} else {
temp <- filter(temp, zip_54901)
temp <- temp[1,]
}
rbind(temp, final)
}
for(i in unique(blah$FIPS)){
temp <- filter(blah, FIPS == i)
zip_54301 <- sum(temp$zip_54301)
zip_54601 <- sum(temp$zip_54601)
zip_54901 <- sum(temp$zip_54901)
if(zip_54301 > zip_54601 & zip_54301 > zip_54901){
temp <- filter(temp, zip_54301)
temp <- temp[1,]
} else if(zip_54601 > zip_54301 & zip_54601 > zip_54901){
temp <- filter(temp, zip_54601)
temp <- temp[1,]
} else {
temp <- filter(temp, zip_54901)
temp <- temp[1,]
}
final <- rbind(temp, final)
}
View(final)
View(tracts)
final <- arrange(final, FIPS)
tracts <- arrange(tracts, FIPS)
final$FIPS
tracts$FIPS
View(final)
View(tracts)
final <- final[-1529,]
write.csv("combined census tracts and zipcodes.csv")
write.csv(final, "combined census tracts and zipcodes.csv")
duplicated(final$COUNTY)
final2 <- final[!duplicated(final$COUNTY),]
View(final2)
setwd("~/Documents/GitHub/heatpump-CBA/creating geographic data set")
View(blah)
library(dplyr)
library(stringr)
setwd("~/Documents/GitHub/heatpump-CBA/creating geographic data set")
## a csv of zip codes and their "primary" counties according to
## https://simplemaps.com/data/us-zips
zip <- read.csv("final_wi_zip_fips_county.csv")
## a csv of census tracts downloaded from arcGIS online's Live Atlas
## https://uw-mad.maps.arcgis.com/home/item.html?id=db3f9c8728dd44e4ad455e0c27a85eea
tracts <- read.csv("tracts_trim_0.csv")
tracts <- filter(tracts, STATE == "WI")
## find the county fips code for each census tract (first 5 digits of the tract's FIPS)
tracts$county_fips <- as.integer(str_extract(tracts$FIPS, "[0-9]{5}"))
## remove superfluous columns from the zip code dataframe
zip <- select(zip, zip, county_fips)
## combine the zips to the census tracts
blah <- left_join(tracts, zip, by = "county_fips")
## Now, taking advantage of the fact that homewyse only has 3 different price "regions"
## within Wisconsin, the rest of the code finds the majority "price region" for each county
## and then just applies that price region, using a representative zip code to all census
## tracts within a county.
## So, for example, Adams county has five zip codes in it. Four of these fall into the price region
## for all zip codes below 54301. One of them falls into the between 54601 and 54901. We just assume
## that the price for anyone in the county will correspond to the former price region, since that's the
## price estimated by homewyse for the majority of zip codes associated with Adams County. The ultimate
## dataset is at the census tract, or county, level and each tract/county has a single zip code associated
## with it that can then be turned into a set of installation costs in the monte carlo code.
##
## Note that this is less accurate than determining which zip code a majority of each census tract actually falls into.
##
## The code will need to be changed if we want to work at the zip code level in the tool or map.
blah <- mutate(blah, zip_54301 = ifelse(zip < 54301, T, F))
blah <- mutate(blah, zip_54601 = ifelse((zip < 54601 & zip >= 54301) | zip >= 54901, T, F))
blah <- mutate(blah, zip_54901 = ifelse(zip < 54901 & zip >= 54601, T, F))
final <- NA
## for each census tract, find out which price region a majority of the associated
## zip codes fall into. Then take one of those zip codes and add it to the final
## dataframe so that that census tract is associatd with that price region.
for(i in unique(blah$FIPS)){
temp <- filter(blah, FIPS == i)
zip_54301 <- sum(temp$zip_54301)
zip_54601 <- sum(temp$zip_54601)
zip_54901 <- sum(temp$zip_54901)
if(zip_54301 >= zip_54601 & zip_54301 >= zip_54901){
temp <- filter(temp, zip_54301)
temp <- temp[1,]
} else if(zip_54601 >= zip_54301 & zip_54601 >= zip_54901){
temp <- filter(temp, zip_54601)
temp <- temp[1,]
} else {
temp <- filter(temp, zip_54901)
temp <- temp[1,]
}
final <- rbind(temp, final)
}
final <- final[-1529,]
##  a dataframe at the census tract level
write.csv(final, "combined census tracts and zipcodes.csv")
final2 <- final[!duplicated(final$COUNTY),]
## a dataframe at the county level
write.csv(final2, "combined counties and zipcodes.csv")
